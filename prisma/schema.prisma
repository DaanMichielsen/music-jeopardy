// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql" or "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id         String     @id @default(uuid())
  name       String? // Optional name for the game
  createdAt  DateTime   @default(now())
  hostId     String? // Optional host player ID
  host       Player?    @relation("GameHost", fields: [hostId], references: [id])
  players    Player[]   @relation("GamePlayers")
  teams      Team[]     @relation("GameTeams")
  categories Category[] @relation("GameCategories")

  // User authentication fields
  createdByUserId String? // Clerk user ID who created this game
  isPrivate       Boolean @default(false) // Whether the game is private
}

model Player {
  id          String       @id @default(uuid())
  name        String
  avatar      String?
  userId      String? // Clerk user ID - links player to a specific user account
  teams       TeamPlayer[]
  hostedGames Game[]       @relation("GameHost")
  Game        Game[]       @relation("GamePlayers")
}

model Team {
  id      String       @id @default(uuid())
  name    String
  color   String
  score   Int          @default(0)
  players TeamPlayer[]
  Game    Game[]       @relation("GameTeams")
}

model TeamPlayer {
  teamId   String
  playerId String
  team     Team   @relation(fields: [teamId], references: [id])
  player   Player @relation(fields: [playerId], references: [id])

  @@id([teamId, playerId])
}

model Category {
  id        String     @id @default(uuid())
  name      String
  genre     String
  questions Question[]
  Game      Game[]     @relation("GameCategories")
}

model Question {
  id           String   @id @default(uuid())
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  points       Int
  displayOrder Int      @default(0) // Custom ordering for questions
  songName     String
  artist       String
  answer       String
  isAnswered   Boolean  @default(false)

  // Spotify track data
  spotifyTrackId     String?
  spotifyTrackName   String?
  spotifyArtistNames String? // JSON array of artist names
  spotifyAlbumName   String?
  spotifyAlbumImage  String? // URL to album image
  spotifyPreviewUrl  String? // URL to 30-second preview
  spotifyDurationMs  Int? // Track duration in milliseconds
  spotifyPopularity  Int?
  spotifyExternalUrl String? // Spotify web URL

  // Audio snippet configuration
  snippetStartTime Int? // Start time in milliseconds
  snippetEndTime   Int? // End time in milliseconds
  snippetDuration  Int? // Duration in milliseconds
}
